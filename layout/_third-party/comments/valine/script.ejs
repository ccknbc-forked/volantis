<% if (theme.comments.valine.js) { %>
  <%- js(theme.comments.valine.js) %>
<% } else { %>
  <%- js(['js/valine.js']) %>
<% } %>
<script>
  var GUEST_INFO = ['nick', 'mail', 'link'];
  var meta = '<%= theme.comments.valine.meta %>'.split(',').filter(function (item) {
    return GUEST_INFO.indexOf(item) > -1
  });
  var REQUIRED_FIELDS = ['nick', 'mail', 'link'];
  var requiredFields = '<%= theme.comments.valine.requiredFields %>'.split(',').filter(function (item) {
    return REQUIRED_FIELDS.indexOf(item) > -1
  });

  function emoji(path, idx, ext) {
    return path + "/" + path + "-" + idx + "." + ext;
  }

  var emojiMaps = {};
  for (var i = 1; i <= 54; i++) {
    emojiMaps['tieba-' + i] = emoji('tieba', i, 'png');
  }
  for (var i = 1; i <= 101; i++) {
    emojiMaps['qq-' + i] = emoji('qq', i, 'gif');
  }
  for (var i = 1; i <= 116; i++) {
    emojiMaps['aru-' + i] = emoji('aru', i, 'gif');
  }
  for (var i = 1; i <= 125; i++) {
    emojiMaps['twemoji-' + i] = emoji('twemoji', i, 'png');
  }
  for (var i = 1; i <= 4; i++) {
    emojiMaps['weibo-' + i] = emoji('weibo', i, 'png');
  }

  function pjax_valine() {
    let pageUrl = $.trim($('#pjax-comment-path').text()) === "none" ? 
      decodeURI(window.location.pathname) : $.trim($('#pjax-comment-path').text());
    let pagePlaceholder = $.trim($('#pjax-comment-placeholder').text()) === "none" ?
      "<%= theme.comments.placeholder %>" : $.trim($('#pjax-comment-placeholder').text());

    let ALLPATH = '<%= theme.comments.path %>';
    if(ALLPATH != '') pageUrl = ALLPATH;

    var valine = new Valine();
    valine.init({
      el: '#valine_container',
      meta: meta,
      placeholder: pagePlaceholder,
      path: pageUrl,
      appId: "<%= theme.comments.valine.appId %>",
      appKey: "<%= theme.comments.valine.appKey %>",
      pageSize: '<%= theme.comments.valine.pageSize %>',
      avatar: '<%= theme.comments.valine.avatar %>',
      lang: '<%= theme.comments.valine.lang %>',
      visitor: '<%= theme.comments.valine.visitor %>',
      highlight: '<%= theme.comments.valine.highlight %>',
      mathJax: '<%= theme.comments.valine.mathJax %>',
      enableQQ: '<%= theme.comments.valine.enableQQ %>',
      requiredFields: requiredFields,
      emojiCDN: 'https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/valine/',
      emojiMaps: emojiMaps
    });
    if (window.AV == undefined) {
      setTimeout(() => {
        pv_count();
      }, 3000);
    } else {
      pv_count();
    }

  }

  const utils = {
    findAll(el, selector) {
        return el.querySelectorAll(selector)
    },
    removeAttr(el, names) {
        let name,
            i = 0,
            attrNames = names && names.match(/[^\x20\t\r\n\f\*\/\\]+/g);
        if (attrNames && el.nodeType === 1) {
            while ((name = attrNames[i++])) {
                el.removeAttribute(name);
            }
        }
        return el
    },
    attr(el, name, value) {
        if (typeof el.getAttribute === "undefined") return utils.prop(el, name, value)
        if (value !== undefined) {
            if (value === null) utils.removeAttr(el, name)
            else el.setAttribute(name, value)
        } else if (({}).toString.call(name) === '[object Object]') {
            utils.each(name, (k, v) => {
                el.setAttribute(k, v)
            })
        } else return el.getAttribute(name)
    },
  }

  function pv_count() {
    var AV = window.AV;
    if (AV == undefined) {return;}
    let root = this;
    let lpv = utils.findAll(document, '.leancloud_visitors_pv,.leancloud-visitors-pv');
    if(lpv.length) {
      let lv = lpv[0];
      let url = utils.attr(lv, 'id');
      let title = utils.attr(lv, 'data-flag-title');
      let xid = encodeURI(url);
      let o = {
        el: lv,
        url: url,
        xid: xid,
        title: title
      }
      if(url == '/site_pv/') {
        let query = new AV.Query('Counter');
        query.equalTo('url', url);
        query.find().then(ret => {
          if (ret.length > 0) {
            let v = ret[0];
            // 恶趣味一下，同步计数，嘿嘿嘿~
            const busuanzi = $('#busuanzi_value_site_pv').text();
            if (busuanzi != '') v.set('time', parseInt(busuanzi)); else v.increment("time");
            v.save().then(rt => {
                $('.leancloud-visitors-count-pv').text(rt.get('time'));
            }).catch(ex => {
                console.log(ex)
            });
          } else {
            createCounter('Counter', o)
          }
        }).catch(ex => {
          ex.code == 101 && createCounter('Counter', o)
        })
      }
    }
  }

  $(function () {
    pjax_valine();
  });
</script>
